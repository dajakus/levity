version: "3.9"
services:
  fe_tls:
    image: keeth/levity-fe-tls
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      - nginx_conf:/etc/nginx/conf.d

  fe:
    image: keeth/levity-fe
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - be
      - ws
    volumes:
      - static_files:/var/www/html
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      - nginx_conf:/etc/nginx/conf.d
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  be:
    image: keeth/levity-be
    ports:
      - "8000:8000"
    environment:
      TIME_ZONE: "UTC"
      DATABASE_URL: postgres://levity:levity@postgres/levity
      AMQP_URL: amqp://guest:guest@rabbitmq:5672/%2F?connection_attempts=20&retry_delay=1
      DEBUG: false
      # Set HOSTNAME to your domain, and generate a SECRET_KEY.
      HOSTNAME: example.com
      SECRET_KEY: changeme

    command: scripts/docker-start.sh
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - static_files:/var/www/html

  be_rpc:
    image: keeth/levity-be
    environment:
      TIME_ZONE: "UTC"
      DATABASE_URL: postgres://levity:levity@postgres/levity
      AMQP_URL: amqp://guest:guest@rabbitmq:5672/%2F?connection_attempts=20&retry_delay=1
    command: poetry run python manage.py consume_rpc_queue
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  ws:
    image: keeth/levity-ws
    ports:
      - "3000:3000"
    environment:
      AMQP_URL: amqp://guest:guest@rabbitmq:5672/%2F?connection_attempts=20&retry_delay=1
    depends_on:
      rabbitmq:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: levity
      POSTGRES_DB: levity
      POSTGRES_PASSWORD: levity
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready


  rabbitmq:
    image: rabbitmq:3-alpine
    ports:
      - '5672:5672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping


volumes:
  postgres_data:
  rabbitmq_data:
  static_files:
  certbot_www:
  certbot_conf:
  nginx_conf:

